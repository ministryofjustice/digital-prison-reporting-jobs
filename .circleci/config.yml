version: 2.1

orbs:
  reporting: ministryofjustice/hmpps-reporting@dev:e6c8666d1584dd7d95ef11165b45ae7809d16f6e
  slack: circleci/slack@4.12.5

workflows:
  checkout-build-publish:
    jobs:
      - reporting/gradle_owasp_check:
          notify_slack: false
          context:
            - hmpps-reporting-common
            - hmpps-reporting-orb
          cache_key: "owasp-build-cache-v9"
          pre-steps:
            - run:
                name: Isolate Gradle cache + pin H2 + sane defaults
                command: |
                  echo 'export GRADLE_USER_HOME=$HOME/.gradle' >> "$BASH_ENV"
                  echo 'export GRADLE_OPTS="-Xmx2g -XX:MaxMetaspaceSize=512m -Dfile.encoding=UTF-8 -Dorg.gradle.workers.max=1 -Dorg.gradle.vfs.watch=false -Dorg.gradle.io.native=false"' >> "$BASH_ENV"
                  echo 'export _JAVA_OPTIONS="-Djava.io.tmpdir=$HOME/.gradle/tmp"' >> "$BASH_ENV"
                  mkdir -p "$HOME/.gradle/init.d" "$HOME/.gradle/tmp"
                  cat > "$HOME/.gradle/init.d/pin-h2.gradle" \<<'EOF'
                  allprojects {
                    configurations.configureEach {
                      resolutionStrategy.eachDependency { d ->
                        if (d.requested.group == 'com.h2database' && d.requested.name == 'h2') {
                          d.useVersion '2.1.214'
                          d.because 'Avoid CI jar-cache write failure'
                        }
                      }
                    }
                    buildscript {
                      configurations.configureEach {
                        resolutionStrategy.eachDependency { d ->
                          if (d.requested.group == 'com.h2database' && d.requested.name == 'h2') {
                            d.useVersion '2.1.214'
                          }
                        }
                      }
                    }
                  }
                  EOF
            - run:
                name: Gradle properties (use $GRADLE_USER_HOME) + nuke corrupted caches
                command: |
                  mkdir -p "$GRADLE_USER_HOME"
                  printf '%s\n' \
                    'org.gradle.jvmargs=-Xmx2048m -XX:MaxMetaspaceSize=512m -Dfile.encoding=UTF-8' \
                    'org.gradle.daemon=false' \
                    'org.gradle.parallel=false' \
                    'org.gradle.workers.max=1' \
                    'org.gradle.vfs.watch=false' \
                    'systemProp.org.gradle.internal.http.connectionTimeout=120000' \
                    'systemProp.org.gradle.internal.http.socketTimeout=120000' \
                    > "$GRADLE_USER_HOME/gradle.properties"
                  # Hard-bust caches so we donâ€™t reuse any truncated downloads
                  rm -rf "$GRADLE_USER_HOME/caches/jars-"* \
                         "$GRADLE_USER_HOME/caches/modules-2" \
                         "$GRADLE_USER_HOME/.tmp/gradle_download"* || true
            - run:
                name: Disk space (debug)
                command: |
                  df -h
                  du -sh "$GRADLE_USER_HOME" || true
            - run:
                name: Sanity check for truncated jars (optional)
                command: |
                  find "$GRADLE_USER_HOME/caches/modules-2/files-2.1" -type f -name '*.jar' -size -5k -print || true

      - reporting/gradle_build_publish:
          tag: "8.0"
          app: digital-prison-reporting-jobs
          app_artifacts_directory: build/libs/
          bucket_prefix: dpr-artifact-store
          sync_args: "--exclude '*' --include '*-all*jar'"
          deploy_script: true
          deploy_to_test: true
          notify_jira: true
          notify_slack: true
          channel: dpr_cicd_alerts
          command: clean --refresh-dependencies jar shadowJar
          filters:
            branches:
              only: /.*/
            tags:
              ignore: /.*/
          ref: << pipeline.git.branch >><< pipeline.git.tag >>
          context:
            - hmpps-reporting-common
            - hmpps-reporting-orb
          cache_key: "dpr-jobs-build-cache-v9"
          pre-steps:
            - run:
                name: Isolate Gradle cache + pin H2 + sane defaults
                command: |
                  echo 'export GRADLE_USER_HOME=$HOME/.gradle' >> "$BASH_ENV"
                  echo 'export GRADLE_OPTS="-Xmx2g -XX:MaxMetaspaceSize=512m -Dfile.encoding=UTF-8 -Dorg.gradle.workers.max=1 -Dorg.gradle.vfs.watch=false -Dorg.gradle.io.native=false"' >> "$BASH_ENV"
                  echo 'export _JAVA_OPTIONS="-Djava.io.tmpdir=$HOME/.gradle/tmp"' >> "$BASH_ENV"
                  mkdir -p "$HOME/.gradle/init.d" "$HOME/.gradle/tmp"
                  cat > "$HOME/.gradle/init.d/pin-h2.gradle" \<<'EOF'
                  allprojects {
                    configurations.configureEach {
                      resolutionStrategy.eachDependency { d ->
                        if (d.requested.group == 'com.h2database' && d.requested.name == 'h2') {
                          d.useVersion '2.1.214'
                          d.because 'Avoid CI jar-cache write failure'
                        }
                      }
                    }
                    buildscript {
                      configurations.configureEach {
                        resolutionStrategy.eachDependency { d ->
                          if (d.requested.group == 'com.h2database' && d.requested.name == 'h2') {
                            d.useVersion '2.1.214'
                          }
                        }
                      }
                    }
                  }
                  EOF
            - run:
                name: Gradle properties (use $GRADLE_USER_HOME) + nuke corrupted caches
                command: |
                  mkdir -p "$GRADLE_USER_HOME"
                  printf '%s\n' \
                    'org.gradle.jvmargs=-Xmx2048m -XX:MaxMetaspaceSize=512m -Dfile.encoding=UTF-8' \
                    'org.gradle.daemon=false' \
                    'org.gradle.parallel=false' \
                    'org.gradle.workers.max=1' \
                    'org.gradle.vfs.watch=false' \
                    'systemProp.org.gradle.internal.http.connectionTimeout=120000' \
                    'systemProp.org.gradle.internal.http.socketTimeout=120000' \
                    > "$GRADLE_USER_HOME/gradle.properties"
                  rm -rf "$GRADLE_USER_HOME/caches/jars-"* \
                         "$GRADLE_USER_HOME/caches/modules-2" \
                         "$GRADLE_USER_HOME/.tmp/gradle_download"* || true
            - run:
                name: Disk space (debug)
                command: |
                  df -h
                  du -sh "$GRADLE_USER_HOME" || true
            - run:
                name: Sanity check for truncated jars (optional)
                command: |
                  find "$GRADLE_USER_HOME/caches/modules-2/files-2.1" -type f -name '*.jar' -size -5k -print || true

      - slack/on-hold:
          channel: dpr_cicd_approvals
          filters:
            branches:
              only: main
            tags:
              ignore: /.*/
          context:
            - hmpps-reporting-common
          requires: [reporting/gradle_build_publish]

      - pause_workflow:
          channel: dpr_cicd_approvals
          type: approval
          filters:
            branches:
              only: main
            tags:
              ignore: /.*/
          context:
            - hmpps-reporting-common
          requires: [slack/on-hold]

      - reporting/gradle_promote_live:
          app: digital-prison-reporting-jobs
          sync_args: "--exclude '*' --include '*-all*jar'"
          deploy_script: true
          release_ready: true
          notify_slack: true
          filters:
            branches:
              only: main
            tags:
              ignore: /.*/
          requires: [pause_workflow]
          context:
            - hmpps-reporting-common

  owasp-security:
    triggers:
      - schedule:
          cron: "30 6 * * *" # 7:30 AM UK
          filters:
            branches:
              only:
                - main
    jobs:
      - reporting/gradle_owasp_check:
          notify_slack: true
          channel: dpr_cicd_alerts
          context:
            - hmpps-reporting-common
            - hmpps-reporting-orb
          cache_key: "owasp-build-cache-v9"
          pre-steps:
            - run:
                name: Isolate Gradle cache + pin H2 + sane defaults
                command: |
                  echo 'export GRADLE_USER_HOME=$HOME/.gradle' >> "$BASH_ENV"
                  echo 'export GRADLE_OPTS="-Xmx2g -XX:MaxMetaspaceSize=512m -Dfile.encoding=UTF-8 -Dorg.gradle.workers.max=1 -Dorg.gradle.vfs.watch=false -Dorg.gradle.io.native=false"' >> "$BASH_ENV"
                  echo 'export _JAVA_OPTIONS="-Djava.io.tmpdir=$HOME/.gradle/tmp"' >> "$BASH_ENV"
                  mkdir -p "$HOME/.gradle/init.d" "$HOME/.gradle/tmp"
                  cat > "$HOME/.gradle/init.d/pin-h2.gradle" \<<'EOF'
                  allprojects {
                    configurations.configureEach {
                      resolutionStrategy.eachDependency { d ->
                        if (d.requested.group == 'com.h2database' && d.requested.name == 'h2') {
                          d.useVersion '2.1.214'
                          d.because 'Avoid CI jar-cache write failure'
                        }
                      }
                    }
                    buildscript {
                      configurations.configureEach {
                        resolutionStrategy.eachDependency { d ->
                          if (d.requested.group == 'com.h2database' && d.requested.name == 'h2') {
                            d.useVersion '2.1.214'
                          }
                        }
                      }
                    }
                  }
                  EOF
            - run:
                name: Gradle properties (use $GRADLE_USER_HOME) + nuke corrupted caches
                command: |
                  mkdir -p "$GRADLE_USER_HOME"
                  printf '%s\n' \
                    'org.gradle.jvmargs=-Xmx2048m -XX:MaxMetaspaceSize=512m -Dfile.encoding=UTF-8' \
                    'org.gradle.daemon=false' \
                    'org.gradle.parallel=false' \
                    'org.gradle.workers.max=1' \
                    'org.gradle.vfs.watch=false' \
                    'systemProp.org.gradle.internal.http.connectionTimeout=120000' \
                    'systemProp.org.gradle.internal.http.socketTimeout=120000' \
                    > "$GRADLE_USER_HOME/gradle.properties"
                  rm -rf "$GRADLE_USER_HOME/caches/jars-"* \
                         "$GRADLE_USER_HOME/caches/modules-2" \
                         "$GRADLE_USER_HOME/.tmp/gradle_download"* || true
            - run:
                name: Disk space (debug)
                command: |
                  df -h
                  du -sh "$GRADLE_USER_HOME" || true
            - run:
                name: Sanity check for truncated jars (optional)
                command: |
                  find "$GRADLE_USER_HOME/caches/modules-2/files-2.1" -type f -name '*.jar' -size -5k -print || true
