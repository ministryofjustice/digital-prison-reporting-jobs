plugins {
    id 'java'
    id 'jacoco'
    id 'io.micronaut.minimal.library'  version '3.7.5'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'io.freefair.lombok' version '6.5.1'
    id 'org.sonarqube'  version '3.5.0.2730'
    id 'org.owasp.dependencycheck'  version '8.2.1'    
}

group 'uk.gov.justice'

version "${version != 'unspecified' ? version : '0.0.1-SNAPSHOT'}"

java {
    targetCompatibility = "1.8"
}

repositories {
    mavenCentral()
}

ext {
    deltaVersion = '2.2.0'
    jacksonVersion = '2.14.2'
    junitVersion = '5.8.1'
    log4jVersion = '2.20.0'
    micronautVersion = '3.8.7'
    sparkVersion = '3.3.0'
}

dependencies {
    annotationProcessor 'info.picocli:picocli-codegen'

    compileOnly "org.apache.spark:spark-core_2.12:$sparkVersion"
    compileOnly "org.apache.spark:spark-sql_2.12:$sparkVersion"

    implementation "org.apache.spark:spark-hive_2.12:$sparkVersion"
    implementation "com.fasterxml.jackson.core:jackson-core:$jacksonVersion"
    implementation "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonVersion"
    implementation "com.fasterxml.jackson:jackson-bom:$jacksonVersion"
    implementation "info.picocli:picocli"
    implementation "io.micronaut.picocli:micronaut-picocli"
    implementation "io.micronaut:micronaut-jackson-databind"
    implementation "io.micronaut:micronaut-runtime:$micronautVersion"
    implementation "io.micronaut:micronaut-validation"
    implementation "jakarta.annotation:jakarta.annotation-api"
    implementation 'com.amazonaws:amazon-kinesis-client:1.14.10'
    implementation 'com.amazonaws:aws-java-sdk-core:1.12.421'
    implementation 'com.amazonaws:aws-java-sdk-glue:1.12.425'
    implementation "org.apache.logging.log4j:log4j-api:$log4jVersion"
    implementation "org.apache.logging.log4j:log4j-core:$log4jVersion"
    implementation "org.apache.logging.log4j:log4j-slf4j-impl:$log4jVersion"
    implementation "io.delta:delta-core_2.12:$deltaVersion"
    implementation "io.delta:delta-contribs_2.12:$deltaVersion"
    implementation "org.apache.hadoop:hadoop-aws:3.3.1"


    implementation ("org.apache.spark:spark-streaming-kinesis-asl_2.12:$sparkVersion") {
      // We exclude spark here to prevent spark being added to the jar during the build.
      // AWS Glue provides this dependency on the classpath so we don't need to include it.
      exclude group: "org.apache.spark", module: "spark-core_2.12"
    }

    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junitVersion"
    testImplementation "org.apache.spark:spark-sql_2.12:$sparkVersion"
    // We are targetting Java 8 so must use mockito 4.x since 5.x requires Java 11 or later.
    testImplementation 'org.mockito:mockito-core:4.11.0'
    testImplementation "io.mockk:mockk:1.13.5"


    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
}

shadowJar {
    zip64 true
}

micronaut {
  version micronautVersion
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs += [
        "-Xlint:all"
    ]
}

test {
    testLogging {
        events "passed", "skipped", "failed"
    }
    maxParallelForks = Runtime.runtime.availableProcessors()
}

assemble {
  dependsOn shadowJar
}
